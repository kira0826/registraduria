plugins {
    id 'com.zeroc.gradle.ice-builder.slice' version '1.5.0' apply false
    id 'com.github.johnrengelman.shadow' version '7.0.0' apply false
}

subprojects {
    // Apply necessary plugins for each subproject
    apply plugin: 'java'
    apply plugin: 'com.zeroc.gradle.ice-builder.slice'
    apply plugin: 'com.github.johnrengelman.shadow'  // Apply shadow plugin to each subproject

    slice {
        java {
            files = [file("../ServicesDefinition.ice")]
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'com.zeroc:ice:3.7.6'
        implementation 'com.zeroc:icestorm:3.7.10'
        implementation 'com.zaxxer:HikariCP:6.2.1'
        implementation 'org.postgresql:postgresql:42.7.4'
        implementation 'org.slf4j:slf4j-api:1.6.1'
        runtimeOnly 'com.zeroc:icegrid:3.7.10'
        implementation 'ch.qos.logback:logback-classic:1.2.11'
        implementation 'com.zeroc:icegrid:3.7.6' 
        runtimeOnly 'com.zeroc:icelocatordiscovery:3.7.6'
        runtimeOnly 'org.apache.commons:commons-compress:1.14'
        
        configurations.all {
            exclude group: 'org.slf4j', module: 'slf4j-simple'
        }
    }

    shadowJar {

        archiveBaseName.set(project.name)
        archiveClassifier.set('')

        // Include compiled classes and resources
        from(sourceSets.main.output)

        // Configure manifest
        manifest {
            attributes(
                    'Main-Class': project.name.capitalize(),  // Uses the capitalized project name
                    "Class-Path": '/opt/Ice-3.7.6/lib/ice-3.7.6.jar /usr/share/java/icestorm-3.7.10.jar'

            )
        }

        // Merge service files if needed
        mergeServiceFiles()
    }

    jar {
        enabled = false
    }

    // Make sure shadowJar runs as part of the build
    build.dependsOn shadowJar
}